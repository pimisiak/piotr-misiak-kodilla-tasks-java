buildscript {
	ext {
		springBootVersion = '2.0.0.M4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects{
	apply plugin: 'java'
	apply plugin: 'checkstyle'
	apply plugin: 'findbugs'

	checkstyle {
		configFile = rootProject.file('config/checkstyle/checkstyle.xml')
		toolVersion '8.1'
	}

	tasks.withType(Checkstyle) {
		reports {
			xml.enabled false
			html.enabled true
		}
	}
}

apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.crud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('mysql:mysql-connector-java')
	compile('org.postgresql:postgresql')
	compile('com.google.guava:guava:22.0')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.1')
	compileOnly('org.projectlombok:lombok:1.16.18')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('junit:junit:4.12')
	testCompile('org.hamcrest:hamcrest-all:1.3')
	testCompile('com.google.guava:guava-testlib:22.0')
	testCompile('org.mockito:mockito-all:1.10.19')
	testRuntime('com.h2database:h2:1.4.189')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}
